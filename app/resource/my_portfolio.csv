"Techstack","Discription","Links"
"Profesional Experience 1 ","(R&D Verification Engineer at Ansys Software) \n Actively contributed to tracking & resolving 50+ bugs, coordinating with development teams to identify, reproduce, & close issues within sprint cycles. \n Validated GPU acceleration across 1000+ test cases, identifying stability thresholds and achieving up to 22% improvement in solver runtime on supported hardware platforms.\n Developed a Python scripts to automate 500+ verification files, reducing manual workload by over 70% & increasing regression efficiency & consistency.", "NA"
"Professiona Experience 2 ","(Analysis Engineer at BlueHat Solutions) \n  Conducted EDA on 8 million+ FDR entries extracting actionable insights on aircraft behavior & critical event. \n Developed Python script to extract and synchronize force data from CFD and FEM files by aligning grid coordinate systems with 98% mapping accuracy. Utilized ML & FFT for Flight Data Analysis, identified flight maneuver & natural frequency for Flight Data. \n Automated conversion of unstructured output into structured data using Python, reduced data processing time by 80% \n Automated weight & CG calculations for weapon integration using Python, enhancing efficiency by 40%. \n Developed Python tool to compute critical loads from all load combinations & improving design accuracy by 90%.", "NA"
"FEM, Python, ML, sklear, tensorflow, numpy, Neural Networks, Gaussian Process Regressor, Decision Tree Regression ","ML-FEM Hybrid Models | IITB MTech Project \n  Developed non-linear Finite Element Method solvers for structural problems & integrated them with Gaussian Process Reg.  Linearized Decision Tree Reg.  & Neural Network models to accelerate solution pipelines.\n Performed a comparative analysis of the three hybrid models across multiple structural cases evaluating their accuracy generalization and computational efficiency. \n Achieved prediction errors of 10−8 (GPR) 10−5 (DTR) and 10−3 (NN) compared to FEM ground truth enabling high-fidelity surrogate modeling for fast evaluations.\n Benchmarked hybrid models output against existing FEM tools, validating with ≤ 4% deviation for selected case.\n Implemented using Python (NumPy, scikit-learn, TensorFlow) with modular architecture for Solver-ML interfacing and result visualization.", "NA"
"Python, Tensorflow, CNN, Fine-Tunning, numpy, image classification ","Fine-Tuning Pretrained CNN Models \n Fine-tuned VGG16 on 1,300 images from the Cats vs Dogs dataset and MobileNet on 2000 images from the Sign Language Digits dataset for multi-class image classification.\n  Evaluated models using confusion matrix & Achieved 96.4% accuracy on Cats vs Dogs classification using VGG16. \n Evaluated models using confusion matrix & Attained 94.1% accuracy on Sign Language Digits using MobileNet.", "https://github.com/PrinceSBI/Fine-Tuning-Pretrained-DL-Models"
"Python, MLFlow, sklearn, Experiment tracking, numpy, image classification, KNN, Decision Tree, SVM, Logistic Regression ","MNIST Digit Classification using Multiple Machine Learning Algorithms (Feb 2025 - Mar 2025) \n Implemented Logistic Reg., KNN, DT & SVM, ML models for handwritten digit recognition in MNIST set (70000 imgs) \n Achieved classification accuracies of up to 94% (Logistic Regression) 95% (KNN) 88% (Decision Tree) and 97% (SVM) after hyperparameter tuning. \n Automated model version control using MLflow Model Registry, enabling future deployment or experiment tracking.", "https://github.com/PrinceSBI/MNIST-Digit-Classification-Pipeline"
"EDA, Python, sklearn, Decision Tree, Logistic Regression, Random Forest Regressor ","House Price Prediction and Deployment \n Performed EDA & preprocessing on housing dataset (1,400×10) to identify influential predictors & remove outliers, etc. \n Trained & evaluated LR, DTR, & RF Reg. models & achieved an R² score of 0.95 on test data with the RF Reg. \n Deployed final model using a Python Flask backend, & built a user-friendly UI using HTML, CSS, and JavaScript", "https://github.com/PrinceSBI/Banglore-House-Price-Prediction-Deployment-on-website"
"EDA, Python, sklearn, Neural Network, SVM, Logistic Regression, Random Forest Regressor ","Mice Protein Dataset for Down’s Syndrome Treatment | IITB Course Project \n Conducted EDA on biomedical dataset (1,080 rows × 77 features), targeting Down’s Syndrome treatment classification. \n Cleaned data by imputing missing values, removing highly correlated variables (correlation ≥ 0.9), & applying feature selection techniques to enhance model efficiency. \n Trained & tuned hyperparameters for Elastic Net Logistic Reg., NN, SVM & RF, achieving up to 89% accuracy. \n Used feature importance metrics to eliminate redundant features, improve model interpretability & generalization.", "NA"
"Deep Learning Fine-Tuning, TensorFlow, PCA, K-Means Clustering ","Deep Learning and Unsupervised Learning | IITB Course Project \n Modified & fine-tuned Convolutional Neural Network (CNN) training pipeline for classification of bees vs ants, experimented with learning rate, momentum, & weight decay, achieving validation accuracy of 94.2%.\n Pre-processed data for clustering using various transforms for k-means clustering. \n Applied K-Means clustering on reduced feature space, determined optimal number of clusters (K =2). \n Performed PCA and Kernel PCA, retaining components with ≥ 95% cumulative explained variance, significantly improving unsupervised feature separation" , "NA"
"LLM, Python, Streamlit, Gemini AI, ChromaDB, YouTubeTranscriptAPI ","AI-Powered-YouTube-Notes-Generator-and-Semantic-QA-System \n 1. Developed and deployed an end-to-end app for transforming video content into searchable text knowledge using Streamlit, Gemini AI, and ChromaDB. \n 2. Created modular, object-oriented backend logic in Python for video processing, transcript extraction, note generation, and vector DB management. \n 3. Used the Google Generative AI SDK, .env secrets, and file I/O caching to build a reliable and reproducible pipeline. \n 4. Engineered an NLP pipeline that extracts transcripts from YouTube videos and uses LLMs (Gemini) to summarize them into concise, bullet-point notes. \n 5. Applied prompt engineering and LLM-based reasoning to build a Q&A system over a custom knowledge base using ChromaDB vector retrieval.", "https://github.com/PrinceSBI/AI-Powered-YouTube-Notes-Generator-and-Semantic-QA-System"